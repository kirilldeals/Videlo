@using System.Security.Claims;
@using Videlo.Models.Database;
@using Videlo.Models.ViewModels;

@model IEnumerable<CommentViewModel>

@{
    var curUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

@foreach (var comment in Model)
{
    bool? curUserCommentFeedback = null;
    if (curUserId != null)
    {
        curUserCommentFeedback = comment.Comment.VideoCommentFeedbacks
            .FirstOrDefault(f => f.UserId == curUserId)?.IsLike;
    }

    <div class="comment">
        <div class="d-flex w-100 justify-content-between">
            <h5>
                <a class="text-decoration-none" asp-controller="Channel" asp-action="Videos" asp-route-userId="@comment.Comment.UserId">@comment.Comment.User.UserName</a>
            </h5>
            <small>@comment.Comment.CreatedAt</small>
        </div>
        <p>
            @comment.Comment.Content
        </p>
        <div class="d-flex justify-content-between">
            <div class="feedback justify-content-start">
                <input type="radio"
                       name="@($"comment-feedback-{comment.Comment.Id}")"
                       id="@($"like-{comment.Comment.Id}")"
                       data-another-input-id="@($"dislike-{comment.Comment.Id}")"
                       data-span-id="@($"likecount-{comment.Comment.Id}")"
                       data-islike="true"
                       data-commentid="@comment.Comment.Id"
                @(curUserCommentFeedback == true ? "class=active checked" : "")>
                <label for="@($"like-{comment.Comment.Id}")">
                    <i class="bi bi-hand-thumbs-up feedback-icon"></i>
                    <i class="bi bi-hand-thumbs-up-fill feedback-icon-selected"></i>
                    <span id="@($"likecount-{comment.Comment.Id}")">@comment.Comment.VideoCommentFeedbacks.Count(f => f.IsLike)</span>
                </label>

                <input type="radio"
                       name="@($"comment-feedback-{comment.Comment.Id}")"
                       id="@($"dislike-{comment.Comment.Id}")"
                       data-another-input-id="@($"like-{comment.Comment.Id}")"
                       data-span-id="@($"dislikecount-{comment.Comment.Id}")"
                       data-islike="false"
                       data-commentid="@comment.Comment.Id"
                @(curUserCommentFeedback == false ? "class=active checked" : "")>
                <label for="@($"dislike-{comment.Comment.Id}")">
                    <i class="bi bi-hand-thumbs-down feedback-icon"></i>
                    <i class="bi bi-hand-thumbs-down-fill feedback-icon-selected"></i>
                    <span id="@($"dislikecount-{comment.Comment.Id}")">@comment.Comment.VideoCommentFeedbacks.Count(f => !f.IsLike)</span>
                </label>
            </div>

            @if (comment.CanUserEdit)
            {
                <div class="dropdown dropup">
                    <div type="button" id="@($"comment-settings-{comment.Comment.Id}")" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-three-dots-vertical"></i>
                    </div>
                    <div class="dropdown-menu dropdown-menu-end">
                        <div type="button" class="dropdown-item" name="delete-comment" data-commentid="@comment.Comment.Id">Delete</div>
                    </div>
                </div>
            }
        </div>
    </div>
}